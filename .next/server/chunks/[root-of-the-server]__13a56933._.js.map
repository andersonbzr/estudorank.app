{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/app/api/admin/users/delete/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nexport const dynamic = \"force-dynamic\";\r\n\r\nfunction requireAdminSecret() {\r\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n  const key = process.env.SUPABASE_SERVICE_ROLE_KEY;\r\n  if (!url || !key) throw new Error(\"Service Role não configurado.\");\r\n  return { url, key };\r\n}\r\n\r\n/**\r\n * POST /api/admin/users/delete\r\n * body: { user_id: string, hard?: boolean }\r\n *\r\n * - hard: se true, além de auth, também apaga dados auxiliares (profiles/messages/points/progress).\r\n *   ⚠️ Tenha certeza de ter FKs com ON DELETE CASCADE ou faça deletes aqui.\r\n */\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { url, key } = requireAdminSecret();\r\n    const admin = createClient(url, key, {\r\n      auth: { persistSession: false, autoRefreshToken: false },\r\n    });\r\n\r\n    const body = await req.json();\r\n    const user_id = String(body?.user_id || \"\").trim();\r\n    const hard = !!body?.hard;\r\n\r\n    if (!user_id) {\r\n      return NextResponse.json({ ok: false, error: \"user_id é obrigatório\" }, { status: 400 });\r\n    }\r\n\r\n    // opcional: limpeza de dados relacionados (se não houver CASCADE)\r\n    if (hard) {\r\n      // apaga dados “do usuário” nas tabelas do seu app\r\n      await admin.from(\"progress\").delete().eq(\"user_id\", user_id);\r\n      await admin.from(\"points\").delete().eq(\"user_id\", user_id);\r\n      await admin.from(\"messages\").delete().eq(\"user_id\", user_id);\r\n      await admin.from(\"profiles\").delete().eq(\"id\", user_id);\r\n    }\r\n\r\n    // Apaga no Auth\r\n    const { error } = await admin.auth.admin.deleteUser(user_id);\r\n    if (error) throw error;\r\n\r\n    return NextResponse.json({ ok: true, user_id, hard });\r\n  } catch (err: any) {\r\n    return NextResponse.json({ ok: false, error: err?.message ?? \"server_error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEO,MAAM,UAAU;AAEvB,SAAS;IACP,MAAM;IACN,MAAM,MAAM,QAAQ,GAAG,CAAC,yBAAyB;IACjD,IAAI,CAAC,OAAO,CAAC,KAAK,MAAM,IAAI,MAAM;IAClC,OAAO;QAAE;QAAK;IAAI;AACpB;AASO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;QACrB,MAAM,QAAQ,IAAA,yMAAY,EAAC,KAAK,KAAK;YACnC,MAAM;gBAAE,gBAAgB;gBAAO,kBAAkB;YAAM;QACzD;QAEA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,UAAU,OAAO,MAAM,WAAW,IAAI,IAAI;QAChD,MAAM,OAAO,CAAC,CAAC,MAAM;QAErB,IAAI,CAAC,SAAS;YACZ,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,IAAI;gBAAO,OAAO;YAAwB,GAAG;gBAAE,QAAQ;YAAI;QACxF;QAEA,kEAAkE;QAClE,IAAI,MAAM;YACR,kDAAkD;YAClD,MAAM,MAAM,IAAI,CAAC,YAAY,MAAM,GAAG,EAAE,CAAC,WAAW;YACpD,MAAM,MAAM,IAAI,CAAC,UAAU,MAAM,GAAG,EAAE,CAAC,WAAW;YAClD,MAAM,MAAM,IAAI,CAAC,YAAY,MAAM,GAAG,EAAE,CAAC,WAAW;YACpD,MAAM,MAAM,IAAI,CAAC,YAAY,MAAM,GAAG,EAAE,CAAC,MAAM;QACjD;QAEA,gBAAgB;QAChB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QACpD,IAAI,OAAO,MAAM;QAEjB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAM;YAAS;QAAK;IACrD,EAAE,OAAO,KAAU;QACjB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAO,OAAO,KAAK,WAAW;QAAe,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/lib/supabase/server.ts"],"sourcesContent":["// src/lib/supabase/server.ts\r\nimport { cookies } from \"next/headers\";\r\nimport { createServerClient } from \"@supabase/ssr\";\r\n\r\nexport async function supabaseServer() {\r\n  const cookieStore = await cookies(); // ðŸ‘ˆ importante\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name, value, options) {\r\n          cookieStore.set({ name, value, ...options });\r\n        },\r\n        remove(name, options) {\r\n          cookieStore.set({ name, value: \"\", ...options });\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;AACA;AAAA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,4IAAO,KAAI,gBAAgB;IAErD,OAAO,IAAA,iMAAkB,iVAGvB;QACE,SAAS;YACP,KAAI,IAAI;gBACN,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAI,EAAE,KAAK,EAAE,OAAO;gBACtB,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAI,EAAE,OAAO;gBAClB,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/app/api/auth/forgot-password/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { supabaseServer } from \"@/lib/supabase/server\";\r\n\r\n/**\r\n * POST /api/auth/forgot-password\r\n * Body: { email: string }\r\n * Envia o e-mail de recuperaÃ§Ã£o com redirect para /reset-password\r\n * Responde de forma NEUTRA (nÃ£o revela se o email existe).\r\n */\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { email } = await req.json();\r\n    const isValid = typeof email === \"string\" && /^\\S+@\\S+\\.\\S+$/.test(email);\r\n    if (!isValid) return NextResponse.json({ error: \"invalid_email\" }, { status: 400 });\r\n\r\n    const supabase = await supabaseServer();\r\n    const redirectTo = `${process.env.NEXT_PUBLIC_SITE_URL}/reset-password`;\r\n\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email, { redirectTo });\r\n    if (error) {\r\n      console.error(\"resetPasswordForEmail:\", error); // log apenas\r\n    }\r\n\r\n    return NextResponse.json({ ok: true });\r\n  } catch (e) {\r\n    console.error(e);\r\n    return NextResponse.json({ ok: true }); // resposta neutra mesmo em erro\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAQO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAChC,MAAM,UAAU,OAAO,UAAU,YAAY,iBAAiB,IAAI,CAAC;QACnE,IAAI,CAAC,SAAS,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;QAEjF,MAAM,WAAW,MAAM,IAAA,oJAAc;QACrC,MAAM,aAAa,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,eAAe,CAAC;QAEvE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,qBAAqB,CAAC,OAAO;YAAE;QAAW;QAChF,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,0BAA0B,QAAQ,aAAa;QAC/D;QAEA,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;QAAK;IACtC,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;QAAK,IAAI,gCAAgC;IAC1E;AACF","debugId":null}}]
}
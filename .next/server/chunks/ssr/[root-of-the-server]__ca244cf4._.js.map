{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/lib/supabase/server.ts"],"sourcesContent":["// src/lib/supabase/server.ts\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nexport function supabaseServer() {\r\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\n  const anon = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n  return createClient(url, anon, {\r\n    auth: {\r\n      persistSession: false,\r\n      autoRefreshToken: false,\r\n      detectSessionInUrl: false,\r\n    },\r\n  });\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;;AAEO,SAAS;IACd,MAAM;IACN,MAAM;IACN,OAAO,IAAA,uMAAY,EAAC,KAAK,MAAM;QAC7B,MAAM;YACJ,gBAAgB;YAChB,kBAAkB;YAClB,oBAAoB;QACtB;IACF;AACF","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/app/login/page.tsx"],"sourcesContent":["// src/app/api/auth/forgot-password/route.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport { supabaseServer } from \"@/lib/supabase/server\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { email } = await req.json();\r\n\r\n    const isValid = typeof email === \"string\" && /^\\S+@\\S+\\.\\S+$/.test(email);\r\n    if (!isValid) {\r\n      return NextResponse.json({ error: \"invalid_email\" }, { status: 400 });\r\n    }\r\n\r\n    const supabase = await supabaseServer();\r\n    const redirectTo = `${process.env.NEXT_PUBLIC_SITE_URL}/reset-password`;\r\n\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email, { redirectTo });\r\n    if (error) {\r\n      // loga, mas mantém resposta neutra\r\n      console.error(\"resetPasswordForEmail:\", error);\r\n    }\r\n\r\n    // resposta neutra (não revela se o email existe)\r\n    return NextResponse.json({ ok: true });\r\n  } catch (e) {\r\n    console.error(e);\r\n    return NextResponse.json({ ok: true });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,4CAA4C;;;;;AAC5C;AACA;;;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAEhC,MAAM,UAAU,OAAO,UAAU,YAAY,iBAAiB,IAAI,CAAC;QACnE,IAAI,CAAC,SAAS;YACZ,OAAO,8IAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,MAAM,WAAW,MAAM,IAAA,kJAAc;QACrC,MAAM,aAAa,GAAG,QAAQ,GAAG,CAAC,oBAAoB,CAAC,eAAe,CAAC;QAEvE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,qBAAqB,CAAC,OAAO;YAAE;QAAW;QAChF,IAAI,OAAO;YACT,mCAAmC;YACnC,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;QAEA,iDAAiD;QACjD,OAAO,8IAAY,CAAC,IAAI,CAAC;YAAE,IAAI;QAAK;IACtC,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC;QACd,OAAO,8IAAY,CAAC,IAAI,CAAC;YAAE,IAAI;QAAK;IACtC;AACF","debugId":null}}]
}
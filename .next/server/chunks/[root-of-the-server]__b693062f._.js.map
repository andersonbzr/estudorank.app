{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/lib/supabase/server.ts"],"sourcesContent":["// src/lib/supabase/server.ts\r\nimport { cookies } from \"next/headers\";\r\nimport { createServerClient } from \"@supabase/ssr\";\r\n\r\nexport async function supabaseServer() {\r\n  const cookieStore = await cookies(); // ðŸ‘ˆ importante\r\n\r\n  return createServerClient(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name) {\r\n          return cookieStore.get(name)?.value;\r\n        },\r\n        set(name, value, options) {\r\n          cookieStore.set({ name, value, ...options });\r\n        },\r\n        remove(name, options) {\r\n          cookieStore.set({ name, value: \"\", ...options });\r\n        },\r\n      },\r\n    }\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;AAC7B;AACA;AAAA;;;AAEO,eAAe;IACpB,MAAM,cAAc,MAAM,IAAA,4IAAO,KAAI,gBAAgB;IAErD,OAAO,IAAA,iMAAkB,iVAGvB;QACE,SAAS;YACP,KAAI,IAAI;gBACN,OAAO,YAAY,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAI,EAAE,KAAK,EAAE,OAAO;gBACtB,YAAY,GAAG,CAAC;oBAAE;oBAAM;oBAAO,GAAG,OAAO;gBAAC;YAC5C;YACA,QAAO,IAAI,EAAE,OAAO;gBAClB,YAAY,GAAG,CAAC;oBAAE;oBAAM,OAAO;oBAAI,GAAG,OAAO;gBAAC;YAChD;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/adsli/EstudoRank-patched-2025-10-22/estudorank/src/app/api/ranking/route.ts"],"sourcesContent":["// app/api/ranking/route.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport { createClient, SupabaseClient } from \"@supabase/supabase-js\";\r\nimport { supabaseServer } from \"@/lib/supabase/server\";\r\n\r\nexport const dynamic = \"force-dynamic\";\r\nexport const revalidate = 0;\r\n\r\ntype LeaderboardItem = {\r\n  user_id: string;\r\n  name?: string | null;\r\n  email?: string | null;\r\n  points: number;\r\n  total: number;\r\n};\r\n\r\ntype ViewRow = {\r\n  user_id: string | null;\r\n  total?: number | null;\r\n  points?: number | null;\r\n  name?: string | null;\r\n  full_name?: string | null;\r\n  email?: string | null;\r\n};\r\n\r\ntype ProgressRow = { user_id: string | null; points: number | null };\r\ntype PointsRow   = { user_id: string | null; value:  number | null };\r\n\r\nfunction parseIntSafe(v: string | null | undefined, def: number) {\r\n  if (!v) return def;\r\n  const n = Number.parseInt(v, 10);\r\n  return Number.isFinite(n) && n > 0 ? n : def;\r\n}\r\n\r\nasync function getServerClient(): Promise<{ client: SupabaseClient; isAdmin: boolean }> {\r\n  const url = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n  const serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\r\n  if (url && serviceKey) {\r\n    const client = createClient(url, serviceKey, { auth: { persistSession: false, autoRefreshToken: false } });\r\n    return { client, isAdmin: true };\r\n  }\r\n  const client = await supabaseServer();\r\n  // @ts-expect-error helper retorna SupabaseClient\r\n  return { client, isAdmin: false };\r\n}\r\n\r\nfunction paginate<T>(arr: T[], page: number, pageSize: number) {\r\n  const total = arr.length;\r\n  const pages = Math.max(1, Math.ceil(total / pageSize));\r\n  const from = (page - 1) * pageSize;\r\n  const to = from + pageSize;\r\n  const slice = arr.slice(from, to);\r\n  return { slice, total, pages };\r\n}\r\n\r\nfunction chooseName(p: any): string | null {\r\n  return (\r\n    (p?.full_name && String(p.full_name).trim()) ||\r\n    (p?.name && String(p.name).trim()) ||\r\n    p?.email ||\r\n    null\r\n  );\r\n}\r\n\r\nasync function fillNames(\r\n  supabase: SupabaseClient,\r\n  ids: string[],\r\n  opts: { isAdmin: boolean }\r\n): Promise<Map<string, { name: string | null; email: string | null }>> {\r\n  const map = new Map<string, { name: string | null; email: string | null }>();\r\n  if (!ids.length) return map;\r\n\r\n  // 1) profiles (somente colunas existentes)\r\n  try {\r\n    const { data: profs } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"id,full_name,name,email\")\r\n      .in(\"id\", ids);\r\n\r\n    if (Array.isArray(profs)) {\r\n      for (const p of profs) {\r\n        if (!p?.id) continue;\r\n        map.set(p.id, { name: chooseName(p), email: p?.email ?? null });\r\n      }\r\n    }\r\n  } catch {\r\n    // RLS pode bloquear; seguimos para fallback se houver service role\r\n  }\r\n\r\n  const missing = ids.filter((id) => !map.has(id));\r\n  if (!missing.length) return map;\r\n\r\n  // 2) auth.users (somente se houver service role)\r\n  if (opts.isAdmin) {\r\n    try {\r\n      const { data: users } = await supabase\r\n        .schema(\"auth\")\r\n        .from(\"users\")\r\n        .select(\"id, email, raw_user_meta_data\")\r\n        .in(\"id\", missing);\r\n\r\n      if (Array.isArray(users)) {\r\n        for (const u of users) {\r\n          const meta = (u as any)?.raw_user_meta_data || {};\r\n          const nm =\r\n            chooseName({ full_name: meta.full_name, name: meta.name, email: u?.email }) ||\r\n            u?.email || null;\r\n          if (u?.id) map.set(u.id, { name: nm, email: u?.email ?? null });\r\n        }\r\n      }\r\n    } catch {\r\n      // ignora\r\n    }\r\n  }\r\n\r\n  return map;\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  const url = new URL(req.url);\r\n  const page = Math.max(1, parseIntSafe(url.searchParams.get(\"page\"), 1));\r\n  const pageSize = Math.min(100, Math.max(1, parseIntSafe(url.searchParams.get(\"pageSize\"), 25)));\r\n\r\n  try {\r\n    const { client: supabase, isAdmin } = await getServerClient();\r\n\r\n    // 1) VIEW\r\n    try {\r\n      const { data, error, count } = await supabase\r\n        .from(\"user_points_view\")\r\n        .select(\"user_id,total,points,name,full_name,email\", { count: \"exact\" })\r\n        .order(\"total\", { ascending: false })\r\n        .range((page - 1) * pageSize, page * pageSize - 1);\r\n\r\n      if (!error && Array.isArray(data)) {\r\n        let leaderboard: LeaderboardItem[] = (data as ViewRow[])\r\n          .filter((r) => !!r.user_id)\r\n          .map((r) => {\r\n            const pts =\r\n              (typeof r.total === \"number\" && Number.isFinite(r.total) ? r.total : null) ??\r\n              (typeof r.points === \"number\" && Number.isFinite(r.points) ? r.points : 0);\r\n            const display = chooseName(r);\r\n\r\n            return {\r\n              user_id: r.user_id!,\r\n              name: display,\r\n              email: r.email ?? null,\r\n              points: pts,\r\n              total: pts,\r\n            };\r\n          });\r\n\r\n        // backfill nomes faltantes\r\n        const missingIds = leaderboard.filter((i) => !i.name).map((i) => i.user_id);\r\n        if (missingIds.length) {\r\n          const names = await fillNames(supabase, missingIds, { isAdmin });\r\n          leaderboard = leaderboard.map((row) =>\r\n            row.name\r\n              ? row\r\n              : {\r\n                  ...row,\r\n                  name: names.get(row.user_id)?.name ?? row.name ?? null,\r\n                  email: names.get(row.user_id)?.email ?? row.email ?? null,\r\n                }\r\n          );\r\n        }\r\n\r\n        return NextResponse.json(\r\n          {\r\n            ok: true,\r\n            leaderboard,\r\n            page,\r\n            pageSize,\r\n            total: typeof count === \"number\" ? count : leaderboard.length,\r\n            pages: typeof count === \"number\" ? Math.max(1, Math.ceil(count / pageSize)) : 1,\r\n            via: \"view\",\r\n            adminClient: isAdmin,\r\n          },\r\n          { headers: { \"Cache-Control\": \"no-store\" } }\r\n        );\r\n      }\r\n    } catch {}\r\n\r\n    // 2) Fallback progress\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"progress\")\r\n        .select(\"user_id,points\")\r\n        .returns<ProgressRow[]>();\r\n\r\n      if (!error && Array.isArray(data)) {\r\n        const totals = new Map<string, number>();\r\n        for (const r of data) {\r\n          if (!r.user_id) continue;\r\n          totals.set(r.user_id, (totals.get(r.user_id) ?? 0) + (Number(r.points) || 0));\r\n        }\r\n\r\n        const rows = [...totals.entries()]\r\n          .map(([user_id, total]) => ({ user_id, total }))\r\n          .sort((a, b) => b.total - a.total);\r\n\r\n        const { slice, total, pages } = paginate(rows, page, pageSize);\r\n        const ids = slice.map((r) => r.user_id);\r\n        const names = await fillNames(supabase, ids, { isAdmin });\r\n\r\n        const leaderboard: LeaderboardItem[] = slice.map((r) => {\r\n          const p = names.get(r.user_id);\r\n          const val = r.total ?? 0;\r\n          return { user_id: r.user_id, name: p?.name ?? null, email: p?.email ?? null, points: val, total: val };\r\n        });\r\n\r\n        return NextResponse.json(\r\n          { ok: true, leaderboard, page, pageSize, total, pages, via: \"progress\", adminClient: isAdmin },\r\n          { headers: { \"Cache-Control\": \"no-store\" } }\r\n        );\r\n      }\r\n    } catch {}\r\n\r\n    // 3) Fallback points\r\n    const { data: pointsRows, error: pointsErr } = await supabase\r\n      .from(\"points\")\r\n      .select(\"user_id,value\")\r\n      .returns<PointsRow[]>();\r\n    if (pointsErr) throw pointsErr;\r\n\r\n    const totals = new Map<string, number>();\r\n    for (const r of pointsRows ?? []) {\r\n      if (!r.user_id) continue;\r\n      totals.set(r.user_id, (totals.get(r.user_id) ?? 0) + (Number(r.value) || 0));\r\n    }\r\n\r\n    const rows = [...totals.entries()]\r\n      .map(([user_id, total]) => ({ user_id, total }))\r\n      .sort((a, b) => b.total - a.total);\r\n\r\n    const { slice, total, pages } = paginate(rows, page, pageSize);\r\n    const ids = slice.map((r) => r.user_id);\r\n    const names = await fillNames(supabase, ids, { isAdmin });\r\n\r\n    const leaderboard: LeaderboardItem[] = slice.map((r) => {\r\n      const p = names.get(r.user_id);\r\n      const val = r.total ?? 0;\r\n      return { user_id: r.user_id, name: p?.name ?? null, email: p?.email ?? null, points: val, total: val };\r\n    });\r\n\r\n    return NextResponse.json(\r\n      { ok: true, leaderboard, page, pageSize, total, pages, via: \"points\", adminClient: isAdmin },\r\n      { headers: { \"Cache-Control\": \"no-store\" } }\r\n    );\r\n  } catch (err: any) {\r\n    console.error(\"[/api/ranking] error:\", err?.message || err);\r\n    return NextResponse.json({ ok: false, error: err?.message ?? \"server_error\" }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}